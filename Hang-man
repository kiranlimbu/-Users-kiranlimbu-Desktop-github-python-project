####### HANG MAN ########
# created in Jupyter Notebook

from IPython.display import clear_output
import random
import string

# Global variable

# Graphics in dictionary format
full_board = {'key1': '  ____', 'key2': '  |  |', 'key3': '  |  O', 'key4': '  | ', 'key4.1':'/', 'key4.2':'|', 'key4.3':'\\', 'key5': '  | ', 'key5.1':'/', 'key5.2':'^', 'key5.3': '\\', 'key6': '__|____'}
start_board = {'key1': '  ____', 'key2': '  |  |', 'key3': '  |  ', 'key4': '  | ', 'key4.1':' ', 'key4.2':' ', 'key4.3':' ', 'key5': '  | ', 'key5.1':' ', 'key5.2':' ', 'key5.3': ' ', 'key6': '__|____'}

#list of country name
asia = ['Afghanistan','Armenia','Azerbaijan','Bahrain','Bangladesh','Bhutan','Brunei','Cambodia','China','Cyprus','Georgia','India','Indonesia','Iran','Iraq','Israel','Japan','Jordan','Kazakhstan','Kuwait','Kyrgyzstan','Laos','Lebanon','Malaysia','Maldives','Mongolia','Myanmar','Nepal','North Korea','Oman','Pakistan','Palestine','Philippines','Qatar']

holder = []
char_index = []
used_char = []


# Graphic Board
def display_graphicBoard(board):
    print(board['key1'] + "\n" +
          board['key2'] + "\n" +
          board['key3'] + "\n" +
          board['key4']+board['key4.1']+board['key4.2']+board['key4.3'] + "\n" +
          board['key5']+board['key5.1']+board['key5.2']+board['key5.3'] + "\n" +
          board['key6'])


def update_graphicBoard(start_board, full_board):
    for key, value in full_board.items():
        
        if full_board[key] != start_board[key]:
            # this if statement displays body after head, rather then hands after head
            if start_board['key3'] == full_board['key3'] and start_board['key4.2'] != full_board['key4.2']:
                start_board['key4.2'] = full_board['key4.2']
            else:
                start_board[key] = full_board[key]
            break
                
        else:
            pass

        
# returns true if the last piece of graphic is displayed
def graphicBoard_full():
    return full_board['key5.3'] == start_board['key5.3']


# returns true if text board if full
def textboard_full():
    return '[]' not in holder 


def place_holder(word):
    for i in word:
        if i == ' ':
            holder.append(i)
        else:
            holder.append('[]')

            
def text_board():
    print(''.join(holder) + ' '*40 + 'Alphabets used: ' + ','.join(used_char))

    
# checks if the user entered alphabet is in the word and stores the index
def isinword(character, word):
    x = 0
    if character in word.lower():
        for char in word.lower():
            if char == character:
                char_index.append(x)
            else:
                pass
            x += 1
        return True
    else:
        return False
                

# stores user entered character
def store_char(character):
    alphabet=string.ascii_lowercase
    if character in alphabet and character not in used_char:
        used_char.append(character[0])
        
        
# place the entered alphabet in the correct slot
def place_char(word, char_index):
    for i in range(0,len(char_index)):
        holder[char_index[i]] = word[char_index[i]]
        
    char_index = [] # resets the array to make room for next character
    
    
# display format is always same
def display_screen():
    print('Hang-Man Game')
    display_graphicBoard(start_board)
    print('\n')
    print('Country:')
    text_board()

    
def replay():
    return input('Play again? Press Y or N:').lower().startswith('y')
    

    
# lets play
print('\t\t\tWelcome to Hang-man Game!\n\nTopic: Countries from Asia')
display_graphicBoard(full_board)
input('Hit Enter to continue')

while True:
    clear_output()
    
    word = random.choice(asia) #selects random name from country list
    place_holder(word) # initiates the place holder for text 
    
    
    game_on = True
    
    while game_on:
        clear_output()
        display_screen()
                
        try:
            character = input('Enter next alphabet:').lower()
            store_char(character)
        except:
            print('Invalid Entry')
                
            
        if not isinword(character, word):
            update_graphicBoard(start_board, full_board)
            display_screen()
            
            if graphicBoard_full():
                clear_output()
                display_screen()
                print('\t\t   Sorry! You Loose!')
                print(f'\t\t   Country is {word}\n')
                
                game_on = False
                    
        else:
            place_char(word, char_index)
            display_screen()
            
            if textboard_full():
                clear_output()
                display_screen()
                print('\t\t   Congratulatioin! You Win!\n')
                
                game_on = False
                
                    

    # reset all the array values
    start_board = {'key1': '  ____', 'key2': '  |  |', 'key3': '  |  ', 'key4': '  | ', 'key4.1':' ', 'key4.2':' ', 'key4.3':' ', 'key5': '  | ', 'key5.1':' ', 'key5.2':' ', 'key5.3': ' ', 'key6': '__|____'}
    holder = []
    char_index = []
    used_char = []
    asia.remove(word) # removes that country from the list, so it does not repeat again
    
    if not replay():
        break
